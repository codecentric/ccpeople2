version: "2"

networks:
  ccdashboardplatform_prodnetwork:
    external: true

services:
  postgres:
    build: postgres
    networks:
      - ccdashboardplatform_prodnetwork
    volumes:
      - "/home/ubuntu/data/postgres:/var/lib/postgresql/data"
    environment:
      - POSTGRES_PASSWORD
      - DATOMIC_POSTGRES_PASSWORD
    restart: always
    env_file: /var/lib/docker/volumes/ccdashboardcontinuousdeliverytools_jenkins-home/_data/jobs/platform-start-container/workspace/.env
  datomicdb:
    build:
      context: transactor
      args:
        LICENSE: ${DATOMIC_LICENSE_KEY}
        DATOMIC_USER: ${DATOMIC_USER}
        DATOMIC_PASSWORD: ${DATOMIC_PASSWORD}
    networks:
      - ccdashboardplatform_prodnetwork
    depends_on:
      - postgres
    volumes:
      - "/home/ubuntu/data/datomic:/data"
    command: -Ddatomic.sqlPassword=${DATOMIC_POSTGRES_PASSWORD} config/transactor.properties
    environment:
      - DATOMIC_POSTGRES_PASSWORD
    restart: always
    env_file: /var/lib/docker/volumes/ccdashboardcontinuousdeliverytools_jenkins-home/_data/jobs/platform-start-container/workspace/.env

  app:
    # must match the jobName
    image: ccpeople2
    networks:
      - ccdashboardplatform_prodnetwork
    depends_on:
      - datomicdb
    ports:
      - "35001:35001"
      - "8000:8000"
    environment:
      - DATOMIC_CONNECT_URL=datomic:sql://people?jdbc:postgresql://postgres:5432/datomic?user=datomic&password=${DATOMIC_POSTGRES_PASSWORD}
      - JIRA_BASE_URL
      - JIRA_TEMPO
      - JIRA_ACCESS_TOKEN
      - JIRA_CONSUMER_PRIVATE_KEY
      - JWS_TOKEN_SECRET
      - APP_HOSTNAME
    restart: always
    env_file: /var/lib/docker/volumes/ccdashboardcontinuousdeliverytools_jenkins-home/_data/jobs/platform-start-container/workspace/.env

