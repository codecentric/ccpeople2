# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
# box: debian
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
  box: clojure:lein-2.5.1
  steps:
    - script:
        name: build uberjar
        cwd: dinner/
        code: |
          lein clean && lein uberjar && cp target/app.jar $WERCKER_OUTPUT_DIR

deploy:
  box: java:8
  steps:
    - internal/docker-push:
        username: $user 
        password: $pass
        tag: latest
        cmd: java -jar /pipeline/source/app.jar
        ports: "8000"
        repository: registry.giantswarm.io/$user/peopleapp
        registry: https://registry.giantswarm.io

    - kordless/giantswarm:
        env: $env
        user: $user
        pass: $pass
        opts: --var=user=$user
        update: CCPeople2/peopleservice/app
